!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AF_INET	pythons/client.py	/^from  socket import socket, AF_INET,SOCK_STREAM$/;"	i
LazyConnect	pythons/client.py	/^class LazyConnect(object):$/;"	c
SOCK_STREAM	pythons/client.py	/^from  socket import socket, AF_INET,SOCK_STREAM$/;"	i
TEXT_SZ	cpp/shmdata.h	4;"	d
_SHMDATA_H_HEADER	cpp/shmdata.h	2;"	d
__enter__	pythons/client.py	/^	def __enter__(self):$/;"	m	class:LazyConnect	file:
__exit__	pythons/client.py	/^	def __exit__(self):$/;"	m	class:LazyConnect	file:
__init__	pythons/client.py	/^	def __init__(self,address,family= AF_INET,type= SOCK_STREAM):$/;"	m	class:LazyConnect
client	pythons/client.py	/^	client =LazyConnect(("192.168.246.130",10000))$/;"	v
func	cpp/test_lock.cpp	/^void *func(void* arg)$/;"	f
main	cpp/shmread.c	/^    int main()  $/;"	f
main	cpp/shmwrite.c	/^    int main()  $/;"	f
main	cpp/test_lock.cpp	/^int main(int argc,char *argv[])$/;"	f
semLock	cpp/test_lock.cpp	/^sem_t semLock;$/;"	v
shared_use_st	cpp/shmdata.h	/^    struct shared_use_st  $/;"	s
socket	pythons/client.py	/^from  socket import socket, AF_INET,SOCK_STREAM$/;"	i
sys	pythons/client.py	/^import sys$/;"	i
text	cpp/shmdata.h	/^        char text[TEXT_SZ];\/\/记录写入和读取的文本  $/;"	m	struct:shared_use_st
written	cpp/shmdata.h	/^        int written;\/\/作为一个标志，非0：表示可读，0表示可写  $/;"	m	struct:shared_use_st
